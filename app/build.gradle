apply plugin: 'android'

dependencies {
    compile('com.android.support:support-v4:19.0.+')
    compile('com.google.code.gson:gson:2.2.+')

    compile('com.nostra13.universalimageloader:universal-image-loader:1.8.+')
    compile('com.nineoldandroids:library:2.4.0')
    compile('com.jakewharton:butterknife:4.0.+')
    compile('com.squareup.picasso:picasso:2.1.+')
//    compile('de.keyboardsurfer.android.widget:crouton-douban:1.8.0.1')

    //compile('com.github.castorflex.smoothprogressbar:library:0.2.+')
    //compile('com.github.chrisbanes.actionbarpulltorefresh:library:0.9.+@aar')
    //compile('com.github.chrisbanes.actionbarpulltorefresh:extra-abs:0.9.+@aar')
    compile('com.actionbarsherlock:actionbarsherlock:4.4.+@aar')

    compile 'com.mcxiaoke.oauthsimple:oauthsimple:2.0.+'
//    compile 'com.github.chrisbanes.photoview:library:1.2.+'

    compile project(':ptr/library')
    compile files('libs/umeng_sdk.jar')
    compile files('libs/photoview_snapshot.jar')
}

android {
    compileSdkVersion 19
    buildToolsVersion "19"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            aidl.srcDirs = ['src']
            assets.srcDirs = ['assets']
            resources.srcDirs = ['src']
        }
    }

    signingConfigs {
        release {
        }
    }

    buildTypes {
        release {
            zipAlign true
            signingConfig signingConfigs.release
        }

        beta {
            signingConfig signingConfigs.release
            versionNameSuffix "-beta"
            debuggable true
        }

        debug {
            packageNameSuffix null
            versionNameSuffix "-dev" + "-b" + getDate()
        }
    }

    lintOptions {
        quiet true
        abortOnError false
    }

}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}

def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null
            && props.containsKey('storeFile')
            && props.containsKey('storePassword')
            && props.containsKey('keyAlias')
            && props.containsKey('keyPassword')) {
        println 'signing.properties found and is valid.'
        android.signingConfigs.release.storeFile = file(props['storeFile'])
        android.signingConfigs.release.storePassword = props['storePassword']
        android.signingConfigs.release.keyAlias = props['keyAlias']
        android.signingConfigs.release.keyPassword = props['keyPassword']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}



